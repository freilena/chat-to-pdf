name: CI

on:
  push:           # Run on all commits/pushes to any branch
  pull_request:   # Run on all pull requests

jobs:
  backend-lint:
    name: Backend Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'api/requirements.txt'
      
      - name: Install dependencies
        working-directory: ./api
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run ruff linting
        working-directory: ./api
        run: ruff check .

  backend-typecheck:
    name: Backend Type Checking
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'api/requirements.txt'
      
      - name: Install dependencies
        working-directory: ./api
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run mypy type checking
        working-directory: ./api
        run: mypy app

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'api/requirements.txt'
      
      - name: Install dependencies
        working-directory: ./api
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Cache embedding model
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-huggingface-all-MiniLM-L6-v2
      
      - name: Run pytest
        working-directory: ./api
        run: pytest tests/ -v

  frontend-lint:
    name: Frontend Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Run eslint
        working-directory: ./web
        run: npm run lint

  frontend-typecheck:
    name: Frontend Type Checking
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Run TypeScript type checking
        working-directory: ./web
        run: npx tsc --noEmit

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Run vitest
        working-directory: ./web
        run: npm run test
